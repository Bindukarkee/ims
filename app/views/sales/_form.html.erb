<style>
  .custom-combobox {
    position: relative;
    display: inline-block;
  }
  .custom-combobox-toggle {
    position: absolute;
    top: 0;
    bottom: 0;
    margin-left: -1px;
    padding: 0;
  }
  .custom-combobox-input {
    margin: 0;
    padding: 5px 10px;
  }
</style>

<div class="container">

  <div class="page-header">
    SALE
  </div>

  <ol class="breadcrumb">
    <li><a href="/">Home</a></li>
    <li><a href="/sales">Sales</a></li>
    <li class="active">New</li>
  </ol>

  <%= form_for @sale do |f| %>

    <div class="form-group">
      <div class="row">
        <div class="col-sm-1">
          <label>Date:</label></div>
        <div class="col-md-8">
      <%= Time.now.strftime("%Y/%m/%d")%>
      </div>
    </div>
      </div>

    <div class="form-group">
      <div class="row">
        <div class="col-sm-1">
          <label>Party:</label></div>
        <div class="col-md-8">
          <div class="ui-widget">
            <%= f.collection_select :customer_id, Customer.order(:name), :id, :name,{prompt: "Select customer"},{id:"combobox1"}  %>
          </div>
          </div>

      </div>
    </div>

  <% end %>

  <table class="table table-responsive">
                <thead>
                <tr>
                  <th>S.N.</th>
                  <th>Particular/Item</th>
                  <th>Unit</th>
                  <th>Quantity</th>
                  <th>Total</th>
                  <th> </th>
                </tr>
                </thead>

                <%= form_for @sale do |f| %>

                <tbody>
                <tr>
                  <td>1</td>
                  <td>
                  <div class="ui-widget">
                  <%=f.collection_select :item_id, Item.order(:name), :id, :name,{prompt: "Select item"},{id:"combobox"}  %>
                  </div>
                  </td>
                  <td><%= f.text_field :unit_sell_price, {class: "form-control"} %>
                  </td>
                  <td><%= f.text_field :quantity, {class: "form-control"} %>
                  </td>
                  <td><%= f.text_field :cash_credit, {class: "form-control"} %>
                  </td>
                  <td><i class="fa fa-plus">  </i>

                          </tr>
                </tbody>
                </table>

                    <p> <button type="submit" class="btn btn-success">(<i class="fa fa-plus">) SUBMIT</i></button>
                    </p>

        <% end %>
      </div>

<script>
  $( function() {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
            .addClass( "custom-combobox" )
            .insertAfter( this.element );

        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },

      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
            value = selected.val() ? selected.text() : "";

        this.input = $( "<input>" )
            .appendTo( this.wrapper )
            .val( value )
            .attr( "title", "" )
            .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
            .autocomplete({
              delay: 0,
              minLength: 0,
              source: $.proxy( this, "_source" )
            })
            .tooltip({
              classes: {
                "ui-tooltip": "ui-state-highlight"
              }
            });

        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },

          autocompletechange: "_removeIfInvalid"
        });
      },

      _createShowAllButton: function() {
        var input = this.input,
            wasOpen = false;

        $( "<a>" )
            .attr( "tabIndex", -1 )
            .attr( "title", "Show All Items" )
            .tooltip()
            .appendTo( this.wrapper )
            .button({
              icons: {
                primary: "ui-icon-triangle-1-s"
              },
              text: false
            })
            .removeClass( "ui-corner-all" )
            .addClass( "custom-combobox-toggle ui-corner-right" )
            .on( "mousedown", function() {
              wasOpen = input.autocomplete( "widget" ).is( ":visible" );
            })
            .on( "click", function() {
              input.trigger( "focus" );

              // Close if already visible
              if ( wasOpen ) {
                return;
              }

              // Pass empty string as value to search for, displaying all results
              input.autocomplete( "search", "" );
            });
      },

      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
      },

      _removeIfInvalid: function( event, ui ) {

        // Selected an item, nothing to do
        if ( ui.item ) {
          return;
        }

        // Search for a match (case-insensitive)
        var value = this.input.val(),
            valueLowerCase = value.toLowerCase(),
            valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;
            return false;
          }
        });

        // Found a match, nothing to do
        if ( valid ) {
          return;
        }

        // Remove invalid value
        this.input
            .val( "" )
            .attr( "title", value + " didn't match any item" )
            .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.autocomplete( "instance" ).term = "";
      },

      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });

    $( "#combobox" ).combobox();
    $( "#combobox1" ).combobox();

    $( "#toggle" ).on( "click", function() {
      $( "#combobox" ).toggle();
    });

    $( "#toggle" ).on( "click", function() {
      $( "#combobox1" ).toggle();
    });
  } );
</script>

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>